/* tslint:disable */
/* eslint-disable */
/**
 * MLB StatAPI
 * An spec API to consume the MLB Stat API 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Sport
 * 
 * @export
 * @interface Sport
 */
export interface Sport {
    /**
     * 
     * @type {number}
     * @memberof Sport
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Sport
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof Sport
     */
    link?: string;
    /**
     * 
     * @type {string}
     * @memberof Sport
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Sport
     */
    abbreviation?: string;
    /**
     * 
     * @type {number}
     * @memberof Sport
     */
    sortOrder?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Sport
     */
    activeStatus?: boolean;
}

/**
 * Check if a given object implements the Sport interface.
 */
export function instanceOfSport(value: object): value is Sport {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function SportFromJSON(json: any): Sport {
    return SportFromJSONTyped(json, false);
}

export function SportFromJSONTyped(json: any, ignoreDiscriminator: boolean): Sport {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'code': json['code'] == null ? undefined : json['code'],
        'link': json['link'] == null ? undefined : json['link'],
        'name': json['name'] == null ? undefined : json['name'],
        'abbreviation': json['abbreviation'] == null ? undefined : json['abbreviation'],
        'sortOrder': json['sortOrder'] == null ? undefined : json['sortOrder'],
        'activeStatus': json['activeStatus'] == null ? undefined : json['activeStatus'],
    };
}

export function SportToJSON(value?: Sport | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'code': value['code'],
        'link': value['link'],
        'name': value['name'],
        'abbreviation': value['abbreviation'],
        'sortOrder': value['sortOrder'],
        'activeStatus': value['activeStatus'],
    };
}

