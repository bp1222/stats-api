/* tslint:disable */
/* eslint-disable */
/**
 * MLB StatAPI
 * An spec API to consume the MLB Stat API 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { League } from './League';
import {
    LeagueFromJSON,
    LeagueFromJSONTyped,
    LeagueToJSON,
} from './League';
import type { Sport } from './Sport';
import {
    SportFromJSON,
    SportFromJSONTyped,
    SportToJSON,
} from './Sport';
import type { Venue } from './Venue';
import {
    VenueFromJSON,
    VenueFromJSONTyped,
    VenueToJSON,
} from './Venue';
import type { Division } from './Division';
import {
    DivisionFromJSON,
    DivisionFromJSONTyped,
    DivisionToJSON,
} from './Division';

/**
 * Team
 * 
 * @export
 * @interface Team
 */
export interface Team {
    /**
     * 
     * @type {number}
     * @memberof Team
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    link?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    allStarStatus?: string;
    /**
     * 
     * @type {number}
     * @memberof Team
     */
    season?: number;
    /**
     * 
     * @type {Venue}
     * @memberof Team
     */
    venue?: Venue;
    /**
     * 
     * @type {Venue}
     * @memberof Team
     */
    springVenue?: Venue;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    teamCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    fileCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    abbreviation?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    teamName?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    locationName?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    firstYearOfPlay?: string;
    /**
     * 
     * @type {League}
     * @memberof Team
     */
    league?: League;
    /**
     * 
     * @type {League}
     * @memberof Team
     */
    springLeague?: League;
    /**
     * 
     * @type {Division}
     * @memberof Team
     */
    division?: Division;
    /**
     * 
     * @type {Sport}
     * @memberof Team
     */
    sport?: Sport;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    shortName?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    franchiseName?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    clubName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Team
     */
    active?: boolean;
}

/**
 * Check if a given object implements the Team interface.
 */
export function instanceOfTeam(value: object): value is Team {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function TeamFromJSON(json: any): Team {
    return TeamFromJSONTyped(json, false);
}

export function TeamFromJSONTyped(json: any, ignoreDiscriminator: boolean): Team {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'link': json['link'] == null ? undefined : json['link'],
        'allStarStatus': json['allStarStatus'] == null ? undefined : json['allStarStatus'],
        'season': json['season'] == null ? undefined : json['season'],
        'venue': json['venue'] == null ? undefined : VenueFromJSON(json['venue']),
        'springVenue': json['springVenue'] == null ? undefined : VenueFromJSON(json['springVenue']),
        'teamCode': json['teamCode'] == null ? undefined : json['teamCode'],
        'fileCode': json['fileCode'] == null ? undefined : json['fileCode'],
        'abbreviation': json['abbreviation'] == null ? undefined : json['abbreviation'],
        'teamName': json['teamName'] == null ? undefined : json['teamName'],
        'locationName': json['locationName'] == null ? undefined : json['locationName'],
        'firstYearOfPlay': json['firstYearOfPlay'] == null ? undefined : json['firstYearOfPlay'],
        'league': json['league'] == null ? undefined : LeagueFromJSON(json['league']),
        'springLeague': json['springLeague'] == null ? undefined : LeagueFromJSON(json['springLeague']),
        'division': json['division'] == null ? undefined : DivisionFromJSON(json['division']),
        'sport': json['sport'] == null ? undefined : SportFromJSON(json['sport']),
        'shortName': json['shortName'] == null ? undefined : json['shortName'],
        'franchiseName': json['franchiseName'] == null ? undefined : json['franchiseName'],
        'clubName': json['clubName'] == null ? undefined : json['clubName'],
        'active': json['active'] == null ? undefined : json['active'],
    };
}

export function TeamToJSON(value?: Team | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'link': value['link'],
        'allStarStatus': value['allStarStatus'],
        'season': value['season'],
        'venue': VenueToJSON(value['venue']),
        'springVenue': VenueToJSON(value['springVenue']),
        'teamCode': value['teamCode'],
        'fileCode': value['fileCode'],
        'abbreviation': value['abbreviation'],
        'teamName': value['teamName'],
        'locationName': value['locationName'],
        'firstYearOfPlay': value['firstYearOfPlay'],
        'league': LeagueToJSON(value['league']),
        'springLeague': LeagueToJSON(value['springLeague']),
        'division': DivisionToJSON(value['division']),
        'sport': SportToJSON(value['sport']),
        'shortName': value['shortName'],
        'franchiseName': value['franchiseName'],
        'clubName': value['clubName'],
        'active': value['active'],
    };
}

