/* tslint:disable */
/* eslint-disable */
/**
 * MLB StatAPI
 * An spec API to consume the MLB Stat API 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MLBTeamRecord } from './MLBTeamRecord';
import {
    MLBTeamRecordFromJSON,
    MLBTeamRecordFromJSONTyped,
    MLBTeamRecordToJSON,
} from './MLBTeamRecord';
import type { Team } from './Team';
import {
    TeamFromJSON,
    TeamFromJSONTyped,
    TeamToJSON,
} from './Team';

/**
 * Game Team
 * 
 * @export
 * @interface GameTeam
 */
export interface GameTeam {
    /**
     * 
     * @type {MLBTeamRecord}
     * @memberof GameTeam
     */
    leagueRecord?: MLBTeamRecord;
    /**
     * 
     * @type {number}
     * @memberof GameTeam
     */
    score: number;
    /**
     * 
     * @type {Team}
     * @memberof GameTeam
     */
    team: Team;
    /**
     * 
     * @type {boolean}
     * @memberof GameTeam
     */
    isWinner: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GameTeam
     */
    splitSquad?: boolean;
    /**
     * 
     * @type {number}
     * @memberof GameTeam
     */
    seriesNumber?: number;
}

/**
 * Check if a given object implements the GameTeam interface.
 */
export function instanceOfGameTeam(value: object): value is GameTeam {
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('team' in value) || value['team'] === undefined) return false;
    if (!('isWinner' in value) || value['isWinner'] === undefined) return false;
    return true;
}

export function GameTeamFromJSON(json: any): GameTeam {
    return GameTeamFromJSONTyped(json, false);
}

export function GameTeamFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameTeam {
    if (json == null) {
        return json;
    }
    return {
        
        'leagueRecord': json['leagueRecord'] == null ? undefined : MLBTeamRecordFromJSON(json['leagueRecord']),
        'score': json['score'],
        'team': TeamFromJSON(json['team']),
        'isWinner': json['isWinner'],
        'splitSquad': json['splitSquad'] == null ? undefined : json['splitSquad'],
        'seriesNumber': json['seriesNumber'] == null ? undefined : json['seriesNumber'],
    };
}

export function GameTeamToJSON(value?: GameTeam | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'leagueRecord': MLBTeamRecordToJSON(value['leagueRecord']),
        'score': value['score'],
        'team': TeamToJSON(value['team']),
        'isWinner': value['isWinner'],
        'splitSquad': value['splitSquad'],
        'seriesNumber': value['seriesNumber'],
    };
}

