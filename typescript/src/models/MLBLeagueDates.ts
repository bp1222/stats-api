/* tslint:disable */
/* eslint-disable */
/**
 * MLB StatAPI
 * An spec API to consume the MLB Stat API 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MLBLeagueDates
 */
export interface MLBLeagueDates {
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    seasonId?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    preSeasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    preSeasonEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    seasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    springStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    springEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    offseasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    offseasonEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    seasonLevelGamedayType?: string;
    /**
     * 
     * @type {string}
     * @memberof MLBLeagueDates
     */
    gameLevelGamedayType?: string;
}

/**
 * Check if a given object implements the MLBLeagueDates interface.
 */
export function instanceOfMLBLeagueDates(value: object): value is MLBLeagueDates {
    return true;
}

export function MLBLeagueDatesFromJSON(json: any): MLBLeagueDates {
    return MLBLeagueDatesFromJSONTyped(json, false);
}

export function MLBLeagueDatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): MLBLeagueDates {
    if (json == null) {
        return json;
    }
    return {
        
        'seasonId': json['seasonId'] == null ? undefined : json['seasonId'],
        'preSeasonStartDate': json['preSeasonStartDate'] == null ? undefined : json['preSeasonStartDate'],
        'preSeasonEndDate': json['preSeasonEndDate'] == null ? undefined : json['preSeasonEndDate'],
        'seasonStartDate': json['seasonStartDate'] == null ? undefined : json['seasonStartDate'],
        'springStartDate': json['springStartDate'] == null ? undefined : json['springStartDate'],
        'springEndDate': json['springEndDate'] == null ? undefined : json['springEndDate'],
        'offseasonStartDate': json['offseasonStartDate'] == null ? undefined : json['offseasonStartDate'],
        'offseasonEndDate': json['offseasonEndDate'] == null ? undefined : json['offseasonEndDate'],
        'seasonLevelGamedayType': json['seasonLevelGamedayType'] == null ? undefined : json['seasonLevelGamedayType'],
        'gameLevelGamedayType': json['gameLevelGamedayType'] == null ? undefined : json['gameLevelGamedayType'],
    };
}

export function MLBLeagueDatesToJSON(value?: MLBLeagueDates | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'seasonId': value['seasonId'],
        'preSeasonStartDate': value['preSeasonStartDate'],
        'preSeasonEndDate': value['preSeasonEndDate'],
        'seasonStartDate': value['seasonStartDate'],
        'springStartDate': value['springStartDate'],
        'springEndDate': value['springEndDate'],
        'offseasonStartDate': value['offseasonStartDate'],
        'offseasonEndDate': value['offseasonEndDate'],
        'seasonLevelGamedayType': value['seasonLevelGamedayType'],
        'gameLevelGamedayType': value['gameLevelGamedayType'],
    };
}

