/*
MLB StatAPI

An spec API to consume the MLB Stat API 

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go

import (
	"encoding/json"
)

// checks if the MLBLeagueDates type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MLBLeagueDates{}

// MLBLeagueDates struct for MLBLeagueDates
type MLBLeagueDates struct {
	SeasonId *string `json:"seasonId,omitempty"`
	PreSeasonStartDate *string `json:"preSeasonStartDate,omitempty"`
	PreSeasonEndDate *string `json:"preSeasonEndDate,omitempty"`
	SeasonStartDate *string `json:"seasonStartDate,omitempty"`
	SpringStartDate *string `json:"springStartDate,omitempty"`
	SpringEndDate *string `json:"springEndDate,omitempty"`
	OffseasonStartDate *string `json:"offseasonStartDate,omitempty"`
	OffseasonEndDate *string `json:"offseasonEndDate,omitempty"`
	SeasonLevelGamedayType *string `json:"seasonLevelGamedayType,omitempty"`
	GameLevelGamedayType *string `json:"gameLevelGamedayType,omitempty"`
}

// NewMLBLeagueDates instantiates a new MLBLeagueDates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMLBLeagueDates() *MLBLeagueDates {
	this := MLBLeagueDates{}
	return &this
}

// NewMLBLeagueDatesWithDefaults instantiates a new MLBLeagueDates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMLBLeagueDatesWithDefaults() *MLBLeagueDates {
	this := MLBLeagueDates{}
	return &this
}

// GetSeasonId returns the SeasonId field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetSeasonId() string {
	if o == nil || IsNil(o.SeasonId) {
		var ret string
		return ret
	}
	return *o.SeasonId
}

// GetSeasonIdOk returns a tuple with the SeasonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetSeasonIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeasonId) {
		return nil, false
	}
	return o.SeasonId, true
}

// HasSeasonId returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasSeasonId() bool {
	if o != nil && !IsNil(o.SeasonId) {
		return true
	}

	return false
}

// SetSeasonId gets a reference to the given string and assigns it to the SeasonId field.
func (o *MLBLeagueDates) SetSeasonId(v string) {
	o.SeasonId = &v
}

// GetPreSeasonStartDate returns the PreSeasonStartDate field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetPreSeasonStartDate() string {
	if o == nil || IsNil(o.PreSeasonStartDate) {
		var ret string
		return ret
	}
	return *o.PreSeasonStartDate
}

// GetPreSeasonStartDateOk returns a tuple with the PreSeasonStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetPreSeasonStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.PreSeasonStartDate) {
		return nil, false
	}
	return o.PreSeasonStartDate, true
}

// HasPreSeasonStartDate returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasPreSeasonStartDate() bool {
	if o != nil && !IsNil(o.PreSeasonStartDate) {
		return true
	}

	return false
}

// SetPreSeasonStartDate gets a reference to the given string and assigns it to the PreSeasonStartDate field.
func (o *MLBLeagueDates) SetPreSeasonStartDate(v string) {
	o.PreSeasonStartDate = &v
}

// GetPreSeasonEndDate returns the PreSeasonEndDate field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetPreSeasonEndDate() string {
	if o == nil || IsNil(o.PreSeasonEndDate) {
		var ret string
		return ret
	}
	return *o.PreSeasonEndDate
}

// GetPreSeasonEndDateOk returns a tuple with the PreSeasonEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetPreSeasonEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.PreSeasonEndDate) {
		return nil, false
	}
	return o.PreSeasonEndDate, true
}

// HasPreSeasonEndDate returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasPreSeasonEndDate() bool {
	if o != nil && !IsNil(o.PreSeasonEndDate) {
		return true
	}

	return false
}

// SetPreSeasonEndDate gets a reference to the given string and assigns it to the PreSeasonEndDate field.
func (o *MLBLeagueDates) SetPreSeasonEndDate(v string) {
	o.PreSeasonEndDate = &v
}

// GetSeasonStartDate returns the SeasonStartDate field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetSeasonStartDate() string {
	if o == nil || IsNil(o.SeasonStartDate) {
		var ret string
		return ret
	}
	return *o.SeasonStartDate
}

// GetSeasonStartDateOk returns a tuple with the SeasonStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetSeasonStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.SeasonStartDate) {
		return nil, false
	}
	return o.SeasonStartDate, true
}

// HasSeasonStartDate returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasSeasonStartDate() bool {
	if o != nil && !IsNil(o.SeasonStartDate) {
		return true
	}

	return false
}

// SetSeasonStartDate gets a reference to the given string and assigns it to the SeasonStartDate field.
func (o *MLBLeagueDates) SetSeasonStartDate(v string) {
	o.SeasonStartDate = &v
}

// GetSpringStartDate returns the SpringStartDate field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetSpringStartDate() string {
	if o == nil || IsNil(o.SpringStartDate) {
		var ret string
		return ret
	}
	return *o.SpringStartDate
}

// GetSpringStartDateOk returns a tuple with the SpringStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetSpringStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.SpringStartDate) {
		return nil, false
	}
	return o.SpringStartDate, true
}

// HasSpringStartDate returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasSpringStartDate() bool {
	if o != nil && !IsNil(o.SpringStartDate) {
		return true
	}

	return false
}

// SetSpringStartDate gets a reference to the given string and assigns it to the SpringStartDate field.
func (o *MLBLeagueDates) SetSpringStartDate(v string) {
	o.SpringStartDate = &v
}

// GetSpringEndDate returns the SpringEndDate field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetSpringEndDate() string {
	if o == nil || IsNil(o.SpringEndDate) {
		var ret string
		return ret
	}
	return *o.SpringEndDate
}

// GetSpringEndDateOk returns a tuple with the SpringEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetSpringEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.SpringEndDate) {
		return nil, false
	}
	return o.SpringEndDate, true
}

// HasSpringEndDate returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasSpringEndDate() bool {
	if o != nil && !IsNil(o.SpringEndDate) {
		return true
	}

	return false
}

// SetSpringEndDate gets a reference to the given string and assigns it to the SpringEndDate field.
func (o *MLBLeagueDates) SetSpringEndDate(v string) {
	o.SpringEndDate = &v
}

// GetOffseasonStartDate returns the OffseasonStartDate field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetOffseasonStartDate() string {
	if o == nil || IsNil(o.OffseasonStartDate) {
		var ret string
		return ret
	}
	return *o.OffseasonStartDate
}

// GetOffseasonStartDateOk returns a tuple with the OffseasonStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetOffseasonStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.OffseasonStartDate) {
		return nil, false
	}
	return o.OffseasonStartDate, true
}

// HasOffseasonStartDate returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasOffseasonStartDate() bool {
	if o != nil && !IsNil(o.OffseasonStartDate) {
		return true
	}

	return false
}

// SetOffseasonStartDate gets a reference to the given string and assigns it to the OffseasonStartDate field.
func (o *MLBLeagueDates) SetOffseasonStartDate(v string) {
	o.OffseasonStartDate = &v
}

// GetOffseasonEndDate returns the OffseasonEndDate field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetOffseasonEndDate() string {
	if o == nil || IsNil(o.OffseasonEndDate) {
		var ret string
		return ret
	}
	return *o.OffseasonEndDate
}

// GetOffseasonEndDateOk returns a tuple with the OffseasonEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetOffseasonEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.OffseasonEndDate) {
		return nil, false
	}
	return o.OffseasonEndDate, true
}

// HasOffseasonEndDate returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasOffseasonEndDate() bool {
	if o != nil && !IsNil(o.OffseasonEndDate) {
		return true
	}

	return false
}

// SetOffseasonEndDate gets a reference to the given string and assigns it to the OffseasonEndDate field.
func (o *MLBLeagueDates) SetOffseasonEndDate(v string) {
	o.OffseasonEndDate = &v
}

// GetSeasonLevelGamedayType returns the SeasonLevelGamedayType field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetSeasonLevelGamedayType() string {
	if o == nil || IsNil(o.SeasonLevelGamedayType) {
		var ret string
		return ret
	}
	return *o.SeasonLevelGamedayType
}

// GetSeasonLevelGamedayTypeOk returns a tuple with the SeasonLevelGamedayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetSeasonLevelGamedayTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SeasonLevelGamedayType) {
		return nil, false
	}
	return o.SeasonLevelGamedayType, true
}

// HasSeasonLevelGamedayType returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasSeasonLevelGamedayType() bool {
	if o != nil && !IsNil(o.SeasonLevelGamedayType) {
		return true
	}

	return false
}

// SetSeasonLevelGamedayType gets a reference to the given string and assigns it to the SeasonLevelGamedayType field.
func (o *MLBLeagueDates) SetSeasonLevelGamedayType(v string) {
	o.SeasonLevelGamedayType = &v
}

// GetGameLevelGamedayType returns the GameLevelGamedayType field value if set, zero value otherwise.
func (o *MLBLeagueDates) GetGameLevelGamedayType() string {
	if o == nil || IsNil(o.GameLevelGamedayType) {
		var ret string
		return ret
	}
	return *o.GameLevelGamedayType
}

// GetGameLevelGamedayTypeOk returns a tuple with the GameLevelGamedayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBLeagueDates) GetGameLevelGamedayTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GameLevelGamedayType) {
		return nil, false
	}
	return o.GameLevelGamedayType, true
}

// HasGameLevelGamedayType returns a boolean if a field has been set.
func (o *MLBLeagueDates) HasGameLevelGamedayType() bool {
	if o != nil && !IsNil(o.GameLevelGamedayType) {
		return true
	}

	return false
}

// SetGameLevelGamedayType gets a reference to the given string and assigns it to the GameLevelGamedayType field.
func (o *MLBLeagueDates) SetGameLevelGamedayType(v string) {
	o.GameLevelGamedayType = &v
}

func (o MLBLeagueDates) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MLBLeagueDates) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SeasonId) {
		toSerialize["seasonId"] = o.SeasonId
	}
	if !IsNil(o.PreSeasonStartDate) {
		toSerialize["preSeasonStartDate"] = o.PreSeasonStartDate
	}
	if !IsNil(o.PreSeasonEndDate) {
		toSerialize["preSeasonEndDate"] = o.PreSeasonEndDate
	}
	if !IsNil(o.SeasonStartDate) {
		toSerialize["seasonStartDate"] = o.SeasonStartDate
	}
	if !IsNil(o.SpringStartDate) {
		toSerialize["springStartDate"] = o.SpringStartDate
	}
	if !IsNil(o.SpringEndDate) {
		toSerialize["springEndDate"] = o.SpringEndDate
	}
	if !IsNil(o.OffseasonStartDate) {
		toSerialize["offseasonStartDate"] = o.OffseasonStartDate
	}
	if !IsNil(o.OffseasonEndDate) {
		toSerialize["offseasonEndDate"] = o.OffseasonEndDate
	}
	if !IsNil(o.SeasonLevelGamedayType) {
		toSerialize["seasonLevelGamedayType"] = o.SeasonLevelGamedayType
	}
	if !IsNil(o.GameLevelGamedayType) {
		toSerialize["gameLevelGamedayType"] = o.GameLevelGamedayType
	}
	return toSerialize, nil
}

type NullableMLBLeagueDates struct {
	value *MLBLeagueDates
	isSet bool
}

func (v NullableMLBLeagueDates) Get() *MLBLeagueDates {
	return v.value
}

func (v *NullableMLBLeagueDates) Set(val *MLBLeagueDates) {
	v.value = val
	v.isSet = true
}

func (v NullableMLBLeagueDates) IsSet() bool {
	return v.isSet
}

func (v *NullableMLBLeagueDates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMLBLeagueDates(val *MLBLeagueDates) *NullableMLBLeagueDates {
	return &NullableMLBLeagueDates{value: val, isSet: true}
}

func (v NullableMLBLeagueDates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMLBLeagueDates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


