/*
MLB StatAPI

An spec API to consume the MLB Stat API 

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go

import (
	"encoding/json"
)

// checks if the MLBGameStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MLBGameStatus{}

// MLBGameStatus struct for MLBGameStatus
type MLBGameStatus struct {
	AbstractGameState *string `json:"abstractGameState,omitempty"`
	// Coded Game State   * `F` - Final   * `D` - Delayed/Postponed   * `S` - Scheduled   * `I` - In Progress   * `P` - Pregame   * `O` - Game Over 
	CodedGameState *string `json:"codedGameState,omitempty"`
	DetailedState *string `json:"detailedState,omitempty"`
	StatusCode *string `json:"statusCode,omitempty"`
	StartTimeTBD *bool `json:"startTimeTBD,omitempty"`
	AbstractGameCode *string `json:"abstractGameCode,omitempty"`
}

// NewMLBGameStatus instantiates a new MLBGameStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMLBGameStatus() *MLBGameStatus {
	this := MLBGameStatus{}
	return &this
}

// NewMLBGameStatusWithDefaults instantiates a new MLBGameStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMLBGameStatusWithDefaults() *MLBGameStatus {
	this := MLBGameStatus{}
	return &this
}

// GetAbstractGameState returns the AbstractGameState field value if set, zero value otherwise.
func (o *MLBGameStatus) GetAbstractGameState() string {
	if o == nil || IsNil(o.AbstractGameState) {
		var ret string
		return ret
	}
	return *o.AbstractGameState
}

// GetAbstractGameStateOk returns a tuple with the AbstractGameState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBGameStatus) GetAbstractGameStateOk() (*string, bool) {
	if o == nil || IsNil(o.AbstractGameState) {
		return nil, false
	}
	return o.AbstractGameState, true
}

// HasAbstractGameState returns a boolean if a field has been set.
func (o *MLBGameStatus) HasAbstractGameState() bool {
	if o != nil && !IsNil(o.AbstractGameState) {
		return true
	}

	return false
}

// SetAbstractGameState gets a reference to the given string and assigns it to the AbstractGameState field.
func (o *MLBGameStatus) SetAbstractGameState(v string) {
	o.AbstractGameState = &v
}

// GetCodedGameState returns the CodedGameState field value if set, zero value otherwise.
func (o *MLBGameStatus) GetCodedGameState() string {
	if o == nil || IsNil(o.CodedGameState) {
		var ret string
		return ret
	}
	return *o.CodedGameState
}

// GetCodedGameStateOk returns a tuple with the CodedGameState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBGameStatus) GetCodedGameStateOk() (*string, bool) {
	if o == nil || IsNil(o.CodedGameState) {
		return nil, false
	}
	return o.CodedGameState, true
}

// HasCodedGameState returns a boolean if a field has been set.
func (o *MLBGameStatus) HasCodedGameState() bool {
	if o != nil && !IsNil(o.CodedGameState) {
		return true
	}

	return false
}

// SetCodedGameState gets a reference to the given string and assigns it to the CodedGameState field.
func (o *MLBGameStatus) SetCodedGameState(v string) {
	o.CodedGameState = &v
}

// GetDetailedState returns the DetailedState field value if set, zero value otherwise.
func (o *MLBGameStatus) GetDetailedState() string {
	if o == nil || IsNil(o.DetailedState) {
		var ret string
		return ret
	}
	return *o.DetailedState
}

// GetDetailedStateOk returns a tuple with the DetailedState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBGameStatus) GetDetailedStateOk() (*string, bool) {
	if o == nil || IsNil(o.DetailedState) {
		return nil, false
	}
	return o.DetailedState, true
}

// HasDetailedState returns a boolean if a field has been set.
func (o *MLBGameStatus) HasDetailedState() bool {
	if o != nil && !IsNil(o.DetailedState) {
		return true
	}

	return false
}

// SetDetailedState gets a reference to the given string and assigns it to the DetailedState field.
func (o *MLBGameStatus) SetDetailedState(v string) {
	o.DetailedState = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *MLBGameStatus) GetStatusCode() string {
	if o == nil || IsNil(o.StatusCode) {
		var ret string
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBGameStatus) GetStatusCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *MLBGameStatus) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given string and assigns it to the StatusCode field.
func (o *MLBGameStatus) SetStatusCode(v string) {
	o.StatusCode = &v
}

// GetStartTimeTBD returns the StartTimeTBD field value if set, zero value otherwise.
func (o *MLBGameStatus) GetStartTimeTBD() bool {
	if o == nil || IsNil(o.StartTimeTBD) {
		var ret bool
		return ret
	}
	return *o.StartTimeTBD
}

// GetStartTimeTBDOk returns a tuple with the StartTimeTBD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBGameStatus) GetStartTimeTBDOk() (*bool, bool) {
	if o == nil || IsNil(o.StartTimeTBD) {
		return nil, false
	}
	return o.StartTimeTBD, true
}

// HasStartTimeTBD returns a boolean if a field has been set.
func (o *MLBGameStatus) HasStartTimeTBD() bool {
	if o != nil && !IsNil(o.StartTimeTBD) {
		return true
	}

	return false
}

// SetStartTimeTBD gets a reference to the given bool and assigns it to the StartTimeTBD field.
func (o *MLBGameStatus) SetStartTimeTBD(v bool) {
	o.StartTimeTBD = &v
}

// GetAbstractGameCode returns the AbstractGameCode field value if set, zero value otherwise.
func (o *MLBGameStatus) GetAbstractGameCode() string {
	if o == nil || IsNil(o.AbstractGameCode) {
		var ret string
		return ret
	}
	return *o.AbstractGameCode
}

// GetAbstractGameCodeOk returns a tuple with the AbstractGameCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MLBGameStatus) GetAbstractGameCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AbstractGameCode) {
		return nil, false
	}
	return o.AbstractGameCode, true
}

// HasAbstractGameCode returns a boolean if a field has been set.
func (o *MLBGameStatus) HasAbstractGameCode() bool {
	if o != nil && !IsNil(o.AbstractGameCode) {
		return true
	}

	return false
}

// SetAbstractGameCode gets a reference to the given string and assigns it to the AbstractGameCode field.
func (o *MLBGameStatus) SetAbstractGameCode(v string) {
	o.AbstractGameCode = &v
}

func (o MLBGameStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MLBGameStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AbstractGameState) {
		toSerialize["abstractGameState"] = o.AbstractGameState
	}
	if !IsNil(o.CodedGameState) {
		toSerialize["codedGameState"] = o.CodedGameState
	}
	if !IsNil(o.DetailedState) {
		toSerialize["detailedState"] = o.DetailedState
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.StartTimeTBD) {
		toSerialize["startTimeTBD"] = o.StartTimeTBD
	}
	if !IsNil(o.AbstractGameCode) {
		toSerialize["abstractGameCode"] = o.AbstractGameCode
	}
	return toSerialize, nil
}

type NullableMLBGameStatus struct {
	value *MLBGameStatus
	isSet bool
}

func (v NullableMLBGameStatus) Get() *MLBGameStatus {
	return v.value
}

func (v *NullableMLBGameStatus) Set(val *MLBGameStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMLBGameStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMLBGameStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMLBGameStatus(val *MLBGameStatus) *NullableMLBGameStatus {
	return &NullableMLBGameStatus{value: val, isSet: true}
}

func (v NullableMLBGameStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMLBGameStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


